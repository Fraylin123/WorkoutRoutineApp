{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fraylin\\\\Desktop\\\\routineAppCopy\\\\frontend\\\\src\\\\LeftSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './LeftSection.css';\nimport plusIcon from \"./icons/plus.png\";\nimport penIcon from \"./icons/pen.png\";\nimport minusIcon from \"./icons/minus.png\";\nimport { WorkoutContext } from './WorkoutContext';\nimport { useContext } from 'react';\n\n//Component for the left part of the Home section (inner Home.js component)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeftSection({\n  setExerciseData,\n  setJSON,\n  day,\n  errors,\n  setErrors,\n  setButtonClicked\n}) {\n  _s();\n  var _exerciseJSON$find;\n  const {\n    exercisesList,\n    setExercisesList,\n    currentDropdown,\n    setCurrentDropdown,\n    exerciseJSON\n  } = useContext(WorkoutContext);\n  const [editMode, setEditMode] = useState(false);\n  const [exercises, setExercise] = useState(((_exerciseJSON$find = exerciseJSON.find(item => item.day === day.name)) === null || _exerciseJSON$find === void 0 ? void 0 : _exerciseJSON$find.exercises) || [{\n    id: 1,\n    name: \"\",\n    sets: \"\",\n    reps: \"\"\n  }, {\n    id: 2,\n    name: \"\",\n    sets: \"\",\n    reps: \"\"\n  }, {\n    id: 3,\n    name: \"\",\n    sets: \"\",\n    reps: \"\"\n  }, {\n    id: 4,\n    name: \"\",\n    sets: \"\",\n    reps: \"\"\n  }, {\n    id: 5,\n    name: \"\",\n    sets: \"\",\n    reps: \"\"\n  }]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/exercises\", {\n      withCredentials: true\n    }).then(response => {\n      const exerciseNames = response.data.map(exercise => exercise._id);\n      setExercisesList(exerciseNames);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const exerciseItem = {\n      day: day.name,\n      exercises: exercises\n    };\n    setJSON(exerciseItem);\n  }, [exercises, day.id]);\n  const handleExercise = (id, property, newValue) => {\n    const updatedExercisesList = exercises.map(exercise => exercise.id === id ? {\n      ...exercise,\n      [property]: newValue\n    } : exercise); //Dynamic key usage that handles input changes. \n    if ((property === \"sets\" || property === \"reps\") && isNaN(newValue)) {\n      //Checking if the input is non-numeric, if non-numeric don't update\n      return;\n    } else {\n      setExercise(updatedExercisesList);\n    }\n    if (newValue.trim() !== \"\") {\n      setErrors(errors.map(item => item.id === id ? {\n        ...item,\n        [property]: false\n      } : item));\n    }\n    setButtonClicked(false);\n    setEditMode(false);\n  };\n  const handleClickExercise = (id, newValue) => {\n    const updatedExercisesList = exercises.map(exercise => exercise.id === id ? {\n      ...exercise,\n      name: newValue\n    } : exercise);\n    setExercise(updatedExercisesList);\n    setCurrentDropdown(null);\n    setExerciseData(newValue);\n  };\n  const handleClick = () => {\n    setExercise([...exercises, {\n      id: Date.now(),\n      name: \"\",\n      sets: \"\",\n      reps: \"\"\n    }]);\n    setButtonClicked(false);\n    console.log(errors);\n  };\n  const handleToggleMode = () => {\n    setEditMode(!editMode);\n    console.log(errors);\n  };\n  const handleDelete = id => {\n    const updatedExercisesList = exercises.filter(exercise => exercise.id !== id);\n    setExercise(updatedExercisesList);\n    setErrors(errors.filter(exercise => exercise.id !== id));\n    setButtonClicked(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plusIcon,\n          alt: \"plus icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleMode,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: penIcon,\n          alt: \"pen icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: exercises.map((exercise, index) => {\n        var _errors$index, _errors$index2, _errors$index3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Exercise \" + (index + 1) + \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exerciseGroup\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type exercise\",\n                className: `exercises ${(_errors$index = errors[index]) !== null && _errors$index !== void 0 && _errors$index.name ? \"error\" : \"\"}`,\n                onChange: event => handleExercise(exercise.id, \"name\", event.target.value),\n                value: exercise.name,\n                onFocus: () => setCurrentDropdown(exercise.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropDown\",\n                children: currentDropdown === exercise.id && exercisesList.filter(item => {\n                  const exerciseSearch = exercise.name.toLowerCase();\n                  const currExercise = item.toLowerCase();\n                  return exerciseSearch && currExercise.startsWith(exerciseSearch) && exerciseSearch !== currExercise;\n                }).map((mapExercise, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-row\",\n                  onClick: () => {\n                    handleClickExercise(exercise.id, mapExercise);\n                  },\n                  children: mapExercise\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Sets\",\n              className: `sets ${(_errors$index2 = errors[index]) !== null && _errors$index2 !== void 0 && _errors$index2.sets ? \"error\" : \"\"}`,\n              value: exercise.sets,\n              onChange: event => handleExercise(exercise.id, \"sets\", event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Reps\",\n              className: `reps ${(_errors$index3 = errors[index]) !== null && _errors$index3 !== void 0 && _errors$index3.reps ? \"error\" : \"\"}`,\n              value: exercise.reps,\n              onChange: event => handleExercise(exercise.id, \"reps\", event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteExercise\",\n              onClick: () => handleDelete(exercise.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: minusIcon,\n                alt: \"minus icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 110\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, exercise.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(LeftSection, \"Avk54onmsa08c4LMAVJQK1Fah+Q=\");\n_c = LeftSection;\nexport default LeftSection;\nvar _c;\n$RefreshReg$(_c, \"LeftSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","plusIcon","penIcon","minusIcon","WorkoutContext","useContext","jsxDEV","_jsxDEV","LeftSection","setExerciseData","setJSON","day","errors","setErrors","setButtonClicked","_s","_exerciseJSON$find","exercisesList","setExercisesList","currentDropdown","setCurrentDropdown","exerciseJSON","editMode","setEditMode","exercises","setExercise","find","item","name","id","sets","reps","get","withCredentials","then","response","exerciseNames","data","map","exercise","_id","catch","error","console","exerciseItem","handleExercise","property","newValue","updatedExercisesList","isNaN","trim","handleClickExercise","handleClick","Date","now","log","handleToggleMode","handleDelete","filter","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","index","_errors$index","_errors$index2","_errors$index3","type","placeholder","onChange","event","target","value","onFocus","exerciseSearch","toLowerCase","currExercise","startsWith","mapExercise","_c","$RefreshReg$"],"sources":["C:/Users/Fraylin/Desktop/routineAppCopy/frontend/src/LeftSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './LeftSection.css'\r\nimport plusIcon from \"./icons/plus.png\"\r\nimport penIcon from \"./icons/pen.png\"\r\nimport minusIcon from \"./icons/minus.png\"\r\nimport { WorkoutContext } from './WorkoutContext'\r\nimport { useContext } from 'react'\r\n\r\n//Component for the left part of the Home section (inner Home.js component)\r\nfunction LeftSection({ setExerciseData, setJSON, day, errors, setErrors, setButtonClicked }) {\r\n    const {\r\n        exercisesList, setExercisesList,\r\n        currentDropdown, setCurrentDropdown,\r\n        exerciseJSON\r\n    } = useContext(WorkoutContext);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [exercises, setExercise] = useState(exerciseJSON.find(item => item.day === day.name)?.exercises || [{ id: 1, name: \"\", sets: \"\", reps: \"\" }, { id: 2, name: \"\", sets: \"\", reps: \"\" }, { id: 3, name: \"\", sets: \"\", reps: \"\" }, { id: 4, name: \"\", sets: \"\", reps: \"\" }, { id: 5, name: \"\", sets: \"\", reps: \"\" }]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/api/exercises\", {withCredentials:true})\r\n            .then((response) => {\r\n                const exerciseNames = response.data.map(exercise => exercise._id)\r\n                setExercisesList(exerciseNames)\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const exerciseItem = {\r\n            day: day.name,\r\n            exercises: exercises\r\n        };\r\n        setJSON(exerciseItem)\r\n    }, [exercises, day.id])\r\n\r\n    const handleExercise = (id, property, newValue) => {\r\n        const updatedExercisesList = exercises.map((exercise) => exercise.id === id ? { ...exercise, [property]: newValue } : exercise); //Dynamic key usage that handles input changes. \r\n        if ((property === \"sets\" || property === \"reps\") && (isNaN(newValue))) { //Checking if the input is non-numeric, if non-numeric don't update\r\n            return;\r\n        }\r\n        else {\r\n            setExercise(updatedExercisesList);\r\n        }\r\n\r\n        if (newValue.trim() !== \"\") {\r\n            setErrors(errors.map((item) => item.id === id ? { ...item, [property]: false } : item))\r\n        }\r\n        setButtonClicked(false)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const handleClickExercise = (id, newValue) => {\r\n        const updatedExercisesList = exercises.map((exercise) => exercise.id === id ? { ...exercise, name: newValue } : exercise);\r\n        setExercise(updatedExercisesList);\r\n        setCurrentDropdown(null)\r\n        setExerciseData(newValue);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setExercise([...exercises, { id: Date.now(), name: \"\", sets: \"\", reps: \"\" }]);\r\n        setButtonClicked(false)\r\n        console.log(errors)\r\n    }\r\n\r\n    const handleToggleMode = () => {\r\n        setEditMode(!editMode);\r\n        console.log(errors)\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const updatedExercisesList = exercises.filter((exercise) => exercise.id !== id)\r\n        setExercise(updatedExercisesList);\r\n        setErrors(errors.filter((exercise) => exercise.id !== id))\r\n        setButtonClicked(false)\r\n    }\r\n\r\n    return (\r\n        <div className='left'>\r\n            <div className='editContainer'>\r\n                <button onClick={handleClick}><img src={plusIcon} alt=\"plus icon\" /></button>\r\n                <button onClick={handleToggleMode}><img src={penIcon} alt=\"pen icon\" /></button>\r\n            </div>\r\n\r\n            <form>\r\n                {exercises.map((exercise, index) => (\r\n                    <div key={exercise.id}>\r\n                        <label>{\"Exercise \" + (index + 1) + \":\"}</label>\r\n                        <div className=\"exerciseGroup\">\r\n                            <div className=\"autocomplete\">\r\n                                <input type=\"text\" placeholder=\"Type exercise\" className={`exercises ${errors[index]?.name ? \"error\" : \"\"}`} onChange={(event) => handleExercise(exercise.id, \"name\", event.target.value)} value={exercise.name} onFocus={() => setCurrentDropdown(exercise.id)} />\r\n                                <div className='dropDown'>\r\n                                    {currentDropdown === exercise.id &&\r\n                                        exercisesList.filter((item) => {\r\n                                            const exerciseSearch = exercise.name.toLowerCase();\r\n                                            const currExercise = item.toLowerCase();\r\n                                            return (exerciseSearch && currExercise.startsWith(exerciseSearch) && exerciseSearch !== currExercise);\r\n\r\n                                        }).map((mapExercise, id) => (\r\n                                            <div key={id} className=\"dropdown-row\" onClick={() => { handleClickExercise(exercise.id, mapExercise) }}>{mapExercise}</div>))\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <input type=\"text\" placeholder=\"Sets\" className={`sets ${errors[index]?.sets ? \"error\" : \"\"}`} value={exercise.sets} onChange={(event) => handleExercise(exercise.id, \"sets\", event.target.value)} />\r\n                            <input type=\"text\" placeholder=\"Reps\" className={`reps ${errors[index]?.reps ? \"error\" : \"\"}`} value={exercise.reps} onChange={(event) => handleExercise(exercise.id, \"reps\", event.target.value)} />\r\n\r\n                            {editMode && (\r\n                                <button className=\"deleteExercise\" onClick={() => handleDelete(exercise.id)}><img src={minusIcon} alt=\"minus icon\" /></button>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                ))}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}