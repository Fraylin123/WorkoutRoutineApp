{"ast":null,"code":"import'./Home.css';import Navigation from'./Navigation.js';import RightSection from'./RightSection.js';import LeftSection from'./LeftSection.js';import Result from\"./Result.js\";import{useEffect}from\"react\";import{useContext}from'react';import{WorkoutContext}from'./WorkoutContext.js';//Component for the Home section\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const{routineValues,setRoutineValues,fitnessValues,setFitnessValues,days,setDays,exerciseData,setExerciseData,exerciseJSON,setExerciseJSON,errors,setErrors,buttonClicked,setButtonClicked}=useContext(WorkoutContext);const handleRoutineClick=index=>{setRoutineValues(prev=>{return prev.map((_,i)=>i===index);});};const handleFitnessClick=index=>{setFitnessValues(prev=>prev.map((_,i)=>i===index));};const updateData=(index,exercise)=>{const newData=[...exerciseData];newData[index]=exercise;setExerciseData(newData);};const updateExerciseJSON=(index,item)=>{setExerciseJSON(prev=>{const newJSON=[...prev];newJSON[index]=item||{day:days[index],exercises:[]};return newJSON;});};const inputValidation=()=>{//console.log(\"calling inputValidation\")\nconst newErrors={};let hasError=false;exerciseJSON.forEach((dayData,dayIndex)=>{if(!dayData||dayData.exercises.length===0){//console.log(\"Correct condition\")\nreturn;};//Pre-check\nconst exerciseErrors=[];dayData.exercises.forEach((exercise,exerciseIndex)=>{//Iterate over the exercises array\nif(!exercise.name||!exercise.sets||!exercise.reps){hasError=true;exerciseErrors[exerciseIndex]={id:exercise.id,name:!exercise.name,sets:!exercise.sets,reps:!exercise.reps};}if(exercise.name&&exercise.sets&&exercise.reps){exerciseErrors[exerciseIndex]={id:exercise.id,name:!exercise.name,sets:!exercise.sets,reps:!exercise.reps};}});if(Object.keys(exerciseErrors).length>0){newErrors[dayIndex]=exerciseErrors;}});setErrors(newErrors);return!hasError;};const handleSaveClick=()=>{//console.log(exerciseJSON)\nif(inputValidation()){setButtonClicked(true);}else{alert(\"There are errors, please fix\");//console.log(\"main errs\", errors)\n}};const sendArray=(index,item)=>{setErrors(prev=>({...prev,[index]:item}));};//If it's a rest day, delete it so that it doesnt render\nuseEffect(()=>{const generateUniqueDays=daysArray=>{const timestamp=Date.now();return daysArray.map((day,index)=>({name:day,id:`${day}-${timestamp}-${index}`}));};if(routineValues[0]&&fitnessValues[0]){setDays(generateUniqueDays([\"Monday - Push\",\"Wednesday - Pull\",\"Friday - Legs\"]));}else if(routineValues[0]&&fitnessValues[1]){setDays(generateUniqueDays([\"Monday - Push\",\"Tuesday - Pull\",\"Wednesday - Legs\",\"Friday - Push\",\"Saturday - Pull\",\"Sunday - Legs\"]));}else if(routineValues[0]&&fitnessValues[2]){setDays(generateUniqueDays([\"Monday - Push\",\"Tuesday - Pull\",\"Wednesday - Legs\",\"Thursday - Push\",\"Friday - Pull\",\"Saturday - Legs\"]));}else if(routineValues[1]&&fitnessValues[0]){setDays(generateUniqueDays([\"Monday - Upper\",\"Tuesday - Lower\",\"Thursday - Upper\",\"Friday - Lower\"]));}else if(routineValues[1]&&(fitnessValues[1]||fitnessValues[2])){setDays(generateUniqueDays([\"Monday - Upper\",\"Tuesday - Lower\",\"Wednesday - Upper\",\"Thursday - Lower\",\"Friday - Upper\",\"Saturday - Lower\"]));}else if(routineValues[2]&&fitnessValues[0]){setDays(generateUniqueDays([\"Monday - Chest, Shoulders, Triceps\",\"Wednesday - Back, Biceps\",\"Friday - Legs\"]));}else if(routineValues[2]&&fitnessValues[1]){setDays(generateUniqueDays([\"Monday - Chest\",\"Tuesday - Back\",\"Wednesday - Shoulder\",\"Thursday - Leg\",\"Friday - Arm\"]));}else if(routineValues[2]&&fitnessValues[2]){setDays(generateUniqueDays([\"Monday - Chest, Triceps\",\"Tuesday - Back, Biceps\",\"Wednesday - Legs\",\"Thursday - Shoulders, Arms\",\"Friday - Chest\",\"Saturday - Legs\"]));}},[routineValues,fitnessValues]);useEffect(()=>{setExerciseJSON(prev=>{const resetJSON=[...prev];return days.map((day,index)=>{var _resetJSON$index;return{day:day.name,exercises:(_resetJSON$index=resetJSON[index])!==null&&_resetJSON$index!==void 0&&_resetJSON$index.exercises?resetJSON[index].exercises:[{id:1,name:\"\",sets:\"\",reps:\"\"},{id:2,name:\"\",sets:\"\",reps:\"\"},{id:3,name:\"\",sets:\"\",reps:\"\"},{id:4,name:\"\",sets:\"\",reps:\"\"},{id:5,name:\"\",sets:\"\",reps:\"\"}]};});});},[days]);return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:'center'},children:\"Workout Routine App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"routineType\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRoutineClick(0),style:{backgroundColor:routineValues[0]?'gray':'black'},children:\"PPL\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRoutineClick(1),style:{backgroundColor:routineValues[1]?'gray':'black'},children:\"Upper Lower\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRoutineClick(2),style:{backgroundColor:routineValues[2]?'gray':'black'},children:\"Bro Split\"})]}),routineValues.some(value=>value===true)&&/*#__PURE__*/_jsxs(\"div\",{className:\"fitnessLevel\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFitnessClick(0),style:{backgroundColor:fitnessValues[0]?'gray':'black'},children:\"Beginner\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFitnessClick(1),style:{backgroundColor:fitnessValues[1]?'gray':'black'},children:\"Intermediate\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFitnessClick(2),style:{backgroundColor:fitnessValues[2]?'gray':'black'},children:\"Advanced\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mainContainer\",children:days.map((currDay,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:currDay.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"pairedContainer\",children:[/*#__PURE__*/_jsx(LeftSection,{setExerciseData:value=>updateData(index,value),setJSON:item=>updateExerciseJSON(index,item),day:currDay,errors:errors[index]||[],setErrors:item=>sendArray(index,item),setButtonClicked:setButtonClicked}),/*#__PURE__*/_jsx(RightSection,{data:exerciseData[index]})]})]},index))}),fitnessValues.some(value=>value===true)&&/*#__PURE__*/_jsx(\"div\",{className:\"submit\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSaveClick(),children:\"Save\"})}),buttonClicked&&/*#__PURE__*/_jsx(Result,{exerciseData:exerciseJSON})]});}export default Home;","map":{"version":3,"names":["Navigation","RightSection","LeftSection","Result","useEffect","useContext","WorkoutContext","jsx","_jsx","jsxs","_jsxs","Home","routineValues","setRoutineValues","fitnessValues","setFitnessValues","days","setDays","exerciseData","setExerciseData","exerciseJSON","setExerciseJSON","errors","setErrors","buttonClicked","setButtonClicked","handleRoutineClick","index","prev","map","_","i","handleFitnessClick","updateData","exercise","newData","updateExerciseJSON","item","newJSON","day","exercises","inputValidation","newErrors","hasError","forEach","dayData","dayIndex","length","exerciseErrors","exerciseIndex","name","sets","reps","id","Object","keys","handleSaveClick","alert","sendArray","generateUniqueDays","daysArray","timestamp","Date","now","resetJSON","_resetJSON$index","className","children","style","textAlign","onClick","backgroundColor","some","value","currDay","setJSON","data"],"sources":["C:/Users/Fraylin/Desktop/routineAppCopy/frontend/src/Home.js"],"sourcesContent":["import './Home.css';\r\nimport Navigation from './Navigation.js'\r\nimport RightSection from './RightSection.js'\r\nimport LeftSection from './LeftSection.js'\r\nimport Result from \"./Result.js\"\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from 'react';\r\nimport { WorkoutContext } from './WorkoutContext.js'\r\n\r\n//Component for the Home section\r\nfunction Home() {\r\n    const {\r\n        routineValues, setRoutineValues,\r\n        fitnessValues, setFitnessValues,\r\n        days, setDays,\r\n        exerciseData, setExerciseData,\r\n        exerciseJSON, setExerciseJSON,\r\n        errors, setErrors,\r\n        buttonClicked, setButtonClicked\r\n    } = useContext(WorkoutContext);\r\n\r\n    const handleRoutineClick = (index) => {\r\n        setRoutineValues((prev) => {\r\n            return prev.map((_, i) => i === index);\r\n        });\r\n    }\r\n\r\n    const handleFitnessClick = (index) => {\r\n        setFitnessValues((prev) => prev.map((_, i) => i === index))\r\n    }\r\n\r\n    const updateData = (index, exercise) => {\r\n        const newData = [...exerciseData]\r\n        newData[index] = exercise\r\n        setExerciseData(newData)\r\n    }\r\n\r\n    const updateExerciseJSON = (index, item) => {\r\n        setExerciseJSON((prev) => {\r\n            const newJSON = [...prev]\r\n            newJSON[index] = item || { day: days[index], exercises: [] }\r\n            return newJSON\r\n        })\r\n    }\r\n\r\n    const inputValidation = () => {\r\n        //console.log(\"calling inputValidation\")\r\n        const newErrors = {};\r\n        let hasError = false;\r\n        exerciseJSON.forEach((dayData, dayIndex) => {\r\n            if (!dayData || dayData.exercises.length === 0) {\r\n                //console.log(\"Correct condition\")\r\n                return\r\n\r\n            }; //Pre-check\r\n            const exerciseErrors = []\r\n            dayData.exercises.forEach((exercise, exerciseIndex) => { //Iterate over the exercises array\r\n                if (!exercise.name || !exercise.sets || !exercise.reps) {\r\n                    hasError = true\r\n                    exerciseErrors[exerciseIndex] = {\r\n                        id: exercise.id,\r\n                        name: !exercise.name,\r\n                        sets: !exercise.sets,\r\n                        reps: !exercise.reps,\r\n                    }\r\n                }\r\n                if (exercise.name && exercise.sets && exercise.reps) {\r\n                    exerciseErrors[exerciseIndex] = {\r\n                        id: exercise.id,\r\n                        name: !exercise.name,\r\n                        sets: !exercise.sets,\r\n                        reps: !exercise.reps,\r\n                    }\r\n                }\r\n\r\n            })\r\n            if (Object.keys(exerciseErrors).length > 0) {\r\n                newErrors[dayIndex] = exerciseErrors;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors)\r\n        return !hasError\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        //console.log(exerciseJSON)\r\n        if (inputValidation()) {\r\n            setButtonClicked(true)\r\n        }\r\n        else {\r\n            alert(\"There are errors, please fix\")\r\n            //console.log(\"main errs\", errors)\r\n        }\r\n    }\r\n\r\n    const sendArray = (index, item) => {\r\n        setErrors((prev) => ({\r\n            ...prev,\r\n            [index]: item,\r\n        }))\r\n    }\r\n\r\n    //If it's a rest day, delete it so that it doesnt render\r\n    useEffect(() => {\r\n        const generateUniqueDays = (daysArray) => {\r\n            const timestamp = Date.now();\r\n            return daysArray.map((day, index) => ({ name: day, id: `${day}-${timestamp}-${index}` }));\r\n        };\r\n\r\n        if (routineValues[0] && fitnessValues[0]) {\r\n            setDays(generateUniqueDays([\"Monday - Push\", \"Wednesday - Pull\", \"Friday - Legs\"]));\r\n        } else if (routineValues[0] && fitnessValues[1]) {\r\n            setDays(generateUniqueDays([\"Monday - Push\", \"Tuesday - Pull\", \"Wednesday - Legs\", \"Friday - Push\", \"Saturday - Pull\", \"Sunday - Legs\"]));\r\n        } else if (routineValues[0] && fitnessValues[2]) {\r\n            setDays(generateUniqueDays([\"Monday - Push\", \"Tuesday - Pull\", \"Wednesday - Legs\", \"Thursday - Push\", \"Friday - Pull\", \"Saturday - Legs\"]));\r\n        } else if (routineValues[1] && fitnessValues[0]) {\r\n            setDays(generateUniqueDays([\"Monday - Upper\", \"Tuesday - Lower\", \"Thursday - Upper\", \"Friday - Lower\"]));\r\n        } else if (routineValues[1] && (fitnessValues[1] || fitnessValues[2])) {\r\n            setDays(generateUniqueDays([\"Monday - Upper\", \"Tuesday - Lower\", \"Wednesday - Upper\", \"Thursday - Lower\", \"Friday - Upper\", \"Saturday - Lower\"]));\r\n        } else if (routineValues[2] && fitnessValues[0]) {\r\n            setDays(generateUniqueDays([\"Monday - Chest, Shoulders, Triceps\", \"Wednesday - Back, Biceps\", \"Friday - Legs\"]));\r\n        } else if (routineValues[2] && fitnessValues[1]) {\r\n            setDays(generateUniqueDays([\"Monday - Chest\", \"Tuesday - Back\", \"Wednesday - Shoulder\", \"Thursday - Leg\", \"Friday - Arm\"]));\r\n        } else if (routineValues[2] && fitnessValues[2]) {\r\n            setDays(generateUniqueDays([\"Monday - Chest, Triceps\", \"Tuesday - Back, Biceps\", \"Wednesday - Legs\", \"Thursday - Shoulders, Arms\", \"Friday - Chest\", \"Saturday - Legs\"]));\r\n        }\r\n    }, [routineValues, fitnessValues]);\r\n\r\n    useEffect(() => {\r\n        setExerciseJSON((prev) => {\r\n            const resetJSON = [...prev]\r\n            return days.map((day, index) => ({ day: day.name, exercises: resetJSON[index]?.exercises ? resetJSON[index].exercises : [{ id: 1, name: \"\", sets: \"\", reps: \"\" }, { id: 2, name: \"\", sets: \"\", reps: \"\" }, { id: 3, name: \"\", sets: \"\", reps: \"\" }, { id: 4, name: \"\", sets: \"\", reps: \"\" }, { id: 5, name: \"\", sets: \"\", reps: \"\" }] }))\r\n        });\r\n    }, [days]);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Navigation />\r\n            <h1 style={{ textAlign: 'center' }}>Workout Routine App</h1>\r\n            <div className='routineType'>\r\n                <button onClick={() => handleRoutineClick(0)} style={{ backgroundColor: routineValues[0] ? 'gray' : 'black' }}>PPL</button>\r\n                <button onClick={() => handleRoutineClick(1)} style={{ backgroundColor: routineValues[1] ? 'gray' : 'black' }}>Upper Lower</button>\r\n                <button onClick={() => handleRoutineClick(2)} style={{ backgroundColor: routineValues[2] ? 'gray' : 'black' }}>Bro Split</button>\r\n            </div>\r\n\r\n            {routineValues.some(value => value === true) && (\r\n                <div className=\"fitnessLevel\">\r\n                    <button onClick={() => handleFitnessClick(0)} style={{ backgroundColor: fitnessValues[0] ? 'gray' : 'black' }}>Beginner</button>\r\n                    <button onClick={() => handleFitnessClick(1)} style={{ backgroundColor: fitnessValues[1] ? 'gray' : 'black' }}>Intermediate</button>\r\n                    <button onClick={() => handleFitnessClick(2)} style={{ backgroundColor: fitnessValues[2] ? 'gray' : 'black' }}>Advanced</button>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='mainContainer'>\r\n                {days.map((currDay, index) => (\r\n                    <div key={index}>\r\n                        <h3>{currDay.name}</h3>\r\n                        <div className=\"pairedContainer\">\r\n                            <LeftSection setExerciseData={(value) => updateData(index, value)} setJSON={(item) => updateExerciseJSON(index, item)} day={currDay} errors={errors[index] || []} setErrors={(item) => sendArray(index, item)} setButtonClicked={setButtonClicked} />\r\n                            <RightSection data={exerciseData[index]} />\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n                }\r\n            </div>\r\n\r\n            {fitnessValues.some(value => value === true) &&\r\n                <div className='submit'>\r\n                    <button onClick={() => handleSaveClick()}>Save</button>\r\n                </div>\r\n            }\r\n\r\n            {buttonClicked &&\r\n                <Result exerciseData={exerciseJSON} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}